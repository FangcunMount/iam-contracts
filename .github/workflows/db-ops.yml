name: Database Operations

on:
  workflow_dispatch:
    inputs:
      operation:
        description: 'Database operation'
        required: true
        type: choice
        options:
          - backup
          - restore
          - migrate
          - status
      backup_name:
        description: 'Backup name (for restore operation)'
        required: false
        type: string

jobs:
  db-backup:
    name: Database Backup
    if: github.event.inputs.operation == 'backup'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Backup Database
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SVRA_HOST }}
          username: ${{ secrets.SVRA_USERNAME }}
          key: ${{ secrets.SVRA_SSH_KEY }}
          port: ${{ secrets.SVRA_SSH_PORT || 22 }}
          script: |
            BACKUP_DIR="/opt/backups/iam"
            TIMESTAMP=$(date +%Y%m%d_%H%M%S)
            BACKUP_FILE="iam_backup_${TIMESTAMP}.sql"
            
            mkdir -p $BACKUP_DIR
            
            echo "Starting database backup..."
            mysqldump -h ${{ secrets.MYSQL_HOST }} \
                      -P ${{ secrets.MYSQL_PORT }} \
                      -u ${{ secrets.MYSQL_USERNAME }} \
                      -p'${{ secrets.MYSQL_PASSWORD }}' \
                      ${{ secrets.MYSQL_DBNAME }} > $BACKUP_DIR/$BACKUP_FILE
            
            gzip $BACKUP_DIR/$BACKUP_FILE
            echo "✅ Backup completed: ${BACKUP_FILE}.gz"
            echo "Size: $(du -h $BACKUP_DIR/${BACKUP_FILE}.gz | cut -f1)"
            
            # Keep only last 7 days of backups
            find $BACKUP_DIR -name "iam_backup_*.sql.gz" -mtime +7 -delete
            echo "Old backups cleaned up"

  db-restore:
    name: Database Restore
    if: github.event.inputs.operation == 'restore'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Restore Database
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SVRA_HOST }}
          username: ${{ secrets.SVRA_USERNAME }}
          key: ${{ secrets.SVRA_SSH_KEY }}
          port: ${{ secrets.SVRA_SSH_PORT || 22 }}
          script: |
            BACKUP_DIR="/opt/backups/iam"
            BACKUP_FILE="${{ github.event.inputs.backup_name }}"
            
            if [ -z "$BACKUP_FILE" ]; then
              echo "❌ Backup name is required for restore operation"
              exit 1
            fi
            
            if [ ! -f "$BACKUP_DIR/$BACKUP_FILE" ]; then
              echo "❌ Backup file not found: $BACKUP_FILE"
              echo "Available backups:"
              ls -lh $BACKUP_DIR/
              exit 1
            fi
            
            echo "Restoring from: $BACKUP_FILE"
            gunzip -c $BACKUP_DIR/$BACKUP_FILE | \
            mysql -h ${{ secrets.MYSQL_HOST }} \
                  -P ${{ secrets.MYSQL_PORT }} \
                  -u ${{ secrets.MYSQL_USERNAME }} \
                  -p'${{ secrets.MYSQL_PASSWORD }}' \
                  ${{ secrets.MYSQL_DBNAME }}
            
            echo "✅ Database restored successfully"

  db-migrate:
    name: Database Migration
    if: github.event.inputs.operation == 'migrate'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Run Migrations
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SVRA_HOST }}
          username: ${{ secrets.SVRA_USERNAME }}
          key: ${{ secrets.SVRA_SSH_KEY }}
          port: ${{ secrets.SVRA_SSH_PORT || 22 }}
          script: |
            cd /opt/iam-contracts
            
            echo "Running database migrations..."
            make migrate
            
            echo "✅ Migrations completed"

  db-status:
    name: Database Status
    if: github.event.inputs.operation == 'status'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Check Database Status
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SVRA_HOST }}
          username: ${{ secrets.SVRA_USERNAME }}
          key: ${{ secrets.SVRA_SSH_KEY }}
          port: ${{ secrets.SVRA_SSH_PORT || 22 }}
          script: |
            echo "=== Database Status ==="
            
            # Check MySQL connection
            mysql -h ${{ secrets.MYSQL_HOST }} \
                  -P ${{ secrets.MYSQL_PORT }} \
                  -u ${{ secrets.MYSQL_USERNAME }} \
                  -p'${{ secrets.MYSQL_PASSWORD }}' \
                  -e "SELECT VERSION();" 2>/dev/null && \
            echo "✅ MySQL connection OK" || \
            echo "❌ MySQL connection failed"
            
            # Show database size
            echo ""
            echo "Database size:"
            mysql -h ${{ secrets.MYSQL_HOST }} \
                  -P ${{ secrets.MYSQL_PORT }} \
                  -u ${{ secrets.MYSQL_USERNAME }} \
                  -p'${{ secrets.MYSQL_PASSWORD }}' \
                  -e "SELECT table_schema AS 'Database', 
                     ROUND(SUM(data_length + index_length) / 1024 / 1024, 2) AS 'Size (MB)' 
                     FROM information_schema.tables 
                     WHERE table_schema = '${{ secrets.MYSQL_DBNAME }}' 
                     GROUP BY table_schema;"
            
            # Show tables
            echo ""
            echo "Tables:"
            mysql -h ${{ secrets.MYSQL_HOST }} \
                  -P ${{ secrets.MYSQL_PORT }} \
                  -u ${{ secrets.MYSQL_USERNAME }} \
                  -p'${{ secrets.MYSQL_PASSWORD }}' \
                  ${{ secrets.MYSQL_DBNAME }} \
                  -e "SHOW TABLES;"
            
            # List backups
            echo ""
            echo "Available backups:"
            ls -lh /opt/backups/iam/ | tail -10
