name: Server Health Check

on:
  workflow_dispatch:
  schedule:
    - cron: '*/30 * * * *'

jobs:
  health-check:
    name: Production Server Health Check
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: System Health Check
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SVRA_HOST }}
          username: ${{ secrets.SVRA_USERNAME }}
          key: ${{ secrets.SVRA_SSH_KEY }}
          port: ${{ secrets.SVRA_SSH_PORT || 22 }}
          script: |
            echo "=========================================="
            echo "Production Server (SVRA) - Health Check"
            echo "=========================================="
            
            # System Info
            echo "Server: $(hostname)"
            echo "Uptime: $(uptime)"
            echo "Date: $(date)"
            echo ""
            
            # CPU
            echo "CPU Usage:"
            top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1"%"}'
            echo ""
            
            # Memory
            echo "Memory Usage:"
            free -h | awk 'NR==2{printf "Used: %s / Total: %s (%.2f%%)\n", $3, $2, $3*100/$2}'
            echo ""
            
            # Disk
            echo "Disk Usage:"
            df -h | grep -E "^/dev/" | awk '{print $1 ": " $5 " used (" $3 "/" $2 ")"}'
            echo ""
            
            # Load Average
            echo "Load Average:"
            uptime | awk -F'load average:' '{print $2}'
            echo ""
            
            # Check for high CPU processes
            echo "Top 5 CPU processes:"
            ps aux --sort=-%cpu | head -6
            
            echo "=========================================="

      - name: IAM Service Check
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SVRA_HOST }}
          username: ${{ secrets.SVRA_USERNAME }}
          key: ${{ secrets.SVRA_SSH_KEY }}
          port: ${{ secrets.SVRA_SSH_PORT || 22 }}
          script: |
            echo "=========================================="
            echo "IAM Service Status"
            echo "=========================================="
            
            # Check service status
            if systemctl is-active --quiet iam-apiserver; then
              echo "✅ IAM service is RUNNING"
              echo ""
              echo "Service details:"
              systemctl status iam-apiserver --no-pager | head -20
              echo ""
              echo "Process info:"
              ps aux | grep iam-apiserver | grep -v grep
            else
              echo "❌ IAM service is NOT RUNNING"
              echo "Attempting to restart service..."
              sudo systemctl restart iam-apiserver
              sleep 5
              if systemctl is-active --quiet iam-apiserver; then
                echo "✅ Service restarted successfully"
              else
                echo "❌ Service restart failed"
                exit 1
              fi
            fi
            
            echo "=========================================="

      - name: Network Check
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SVRA_HOST }}
          username: ${{ secrets.SVRA_USERNAME }}
          key: ${{ secrets.SVRA_SSH_KEY }}
          port: ${{ secrets.SVRA_SSH_PORT || 22 }}
          script: |
            echo "=========================================="
            echo "Network Status"
            echo "=========================================="
            
            # Check listening ports
            echo "Listening ports:"
            ss -tlnp | grep -E ":(80|443|8080|8443|3306|6379)" || echo "No services on common ports"
            echo ""
            
            # Check network connections
            echo "Active connections:"
            ss -s
            echo ""
            
            # Check if API is responding
            echo "API Health Check:"
            if command -v curl >/dev/null 2>&1; then
              if curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/healthz | grep -q "200"; then
                echo "✅ API is responding"
              else
                echo "⚠️ API health check returned non-200 status"
              fi
            else
              echo "curl not available"
            fi
            
            echo "=========================================="

      - name: Database Check
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SVRA_HOST }}
          username: ${{ secrets.SVRA_USERNAME }}
          key: ${{ secrets.SVRA_SSH_KEY }}
          port: ${{ secrets.SVRA_SSH_PORT || 22 }}
          script: |
            echo "=========================================="
            echo "Database Health Check"
            echo "=========================================="
            
            # Check MySQL connection
            if command -v mysql >/dev/null 2>&1; then
              if mysql -h ${{ secrets.MYSQL_HOST }} \
                       -P ${{ secrets.MYSQL_PORT }} \
                       -u ${{ secrets.MYSQL_USERNAME }} \
                       -p'${{ secrets.MYSQL_PASSWORD }}' \
                       -e "SELECT 1;" >/dev/null 2>&1; then
                echo "✅ Database connection OK"
                
                # Show database stats
                echo ""
                echo "Active connections:"
                mysql -h ${{ secrets.MYSQL_HOST }} \
                      -P ${{ secrets.MYSQL_PORT }} \
                      -u ${{ secrets.MYSQL_USERNAME }} \
                      -p'${{ secrets.MYSQL_PASSWORD }}' \
                      -e "SHOW STATUS LIKE 'Threads_connected';"
              else
                echo "❌ Database connection failed"
                exit 1
              fi
            else
              echo "MySQL client not available"
            fi
            
            echo "=========================================="

      - name: Disk Space Alert
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SVRA_HOST }}
          username: ${{ secrets.SVRA_USERNAME }}
          key: ${{ secrets.SVRA_SSH_KEY }}
          port: ${{ secrets.SVRA_SSH_PORT || 22 }}
          script: |
            echo "=========================================="
            echo "Disk Space Monitoring"
            echo "=========================================="
            
            # Check if any filesystem is > 80% full
            df -h | grep -E "^/dev/" | awk '{
              gsub(/%/, "", $5);
              if ($5 > 80) {
                print "⚠️ WARNING: "$1" is "$5"% full ("$3"/"$2")";
                alert=1
              }
            } END {
              if (!alert) print "✅ All filesystems OK"
            }'
            
            echo "=========================================="

  report:
    name: Health Check Report
    needs: [health-check]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Generate Report
        run: |
          echo "=========================================="
          echo "Health Check Report"
          echo "=========================================="
          echo "Status: ${{ needs.health-check.result }}"
          echo "Time: $(date)"
          echo ""
          
          if [ "${{ needs.health-check.result }}" == "success" ]; then
            echo "✅ All health checks passed"
          else
            echo "❌ Health check failed - please investigate"
            exit 1
          fi
          
          echo "=========================================="
