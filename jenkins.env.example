# ============================================================================
# Jenkins 环境配置示例
# ============================================================================
# 将此文件复制为 jenkins.env 并根据实际情况修改
# 在 Jenkins Pipeline 中可以使用 credentials() 或环境变量注入这些值

# ============================================================================
# 部署目标服务器配置
# ============================================================================

# 部署服务器 IP 或域名
DEPLOY_HOST=192.168.1.100

# 部署用户
DEPLOY_USER=deploy

# 部署路径
DEPLOY_PATH=/opt/iam-contracts

# SSH 端口（默认 22）
DEPLOY_SSH_PORT=22

# ============================================================================
# 应用配置
# ============================================================================

# 应用名称
APP_NAME=apiserver

# 服务端口
SERVICE_PORT=8080

# 服务名称（用于 systemd）
SERVICE_NAME=iam-apiserver

# 配置文件路径
CONFIG_FILE=configs/apiserver.yaml

# ============================================================================
# Go 构建配置
# ============================================================================

# Go 版本
GO_VERSION=1.24

# Go 代理（加速依赖下载）
GOPROXY=https://goproxy.cn,direct

# Go 模块
GO111MODULE=on

# CGO 配置
CGO_ENABLED=0

# 目标操作系统
GOOS=linux

# 目标架构
GOARCH=amd64

# ============================================================================
# Docker 配置（如果使用 Docker 部署）
# ============================================================================

# Docker 仓库地址
DOCKER_REGISTRY=your-registry.com

# Docker 镜像名称
DOCKER_IMAGE=iam-contracts

# Docker 镜像标签
DOCKER_TAG=latest

# ============================================================================
# 数据库配置（部署环境）
# ============================================================================

# MySQL 主机
MYSQL_HOST=localhost

# MySQL 端口
MYSQL_PORT=3306

# MySQL 数据库名
MYSQL_DATABASE=iam

# MySQL 用户名（不建议在此处存储，应使用 Jenkins 凭据）
# MYSQL_USERNAME=iam

# MySQL 密码（不建议在此处存储，应使用 Jenkins 凭据）
# MYSQL_PASSWORD=

# ============================================================================
# Redis 配置（部署环境）
# ============================================================================

# Redis 主机
REDIS_HOST=localhost

# Redis 端口
REDIS_PORT=6379

# Redis 数据库
REDIS_DB=0

# Redis 密码（不建议在此处存储，应使用 Jenkins 凭据）
# REDIS_PASSWORD=

# ============================================================================
# 通知配置
# ============================================================================

# 邮件通知地址
NOTIFICATION_EMAIL=devops@example.com

# 钉钉 Webhook（如果使用钉钉通知）
# DINGTALK_WEBHOOK=https://oapi.dingtalk.com/robot/send?access_token=xxx

# 企业微信 Webhook（如果使用企业微信通知）
# WECHAT_WEBHOOK=https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=xxx

# Slack Webhook（如果使用 Slack 通知）
# SLACK_WEBHOOK=https://hooks.slack.com/services/xxx

# ============================================================================
# 构建选项
# ============================================================================

# 是否跳过测试
SKIP_TESTS=false

# 是否跳过代码检查
SKIP_LINT=false

# 测试超时时间（秒）
TEST_TIMEOUT=300

# 构建超时时间（分钟）
BUILD_TIMEOUT=30

# ============================================================================
# 部署选项
# ============================================================================

# 是否执行健康检查
HEALTH_CHECK_ENABLED=true

# 健康检查 URL
HEALTH_CHECK_URL=http://localhost:8080/healthz

# 健康检查重试次数
HEALTH_CHECK_RETRIES=10

# 健康检查重试间隔（秒）
HEALTH_CHECK_INTERVAL=3

# 是否备份旧版本
BACKUP_ENABLED=true

# 保留备份数量
BACKUP_KEEP_COUNT=5

# 是否使用 systemd 管理服务
USE_SYSTEMD=true

# ============================================================================
# 日志配置
# ============================================================================

# 日志目录
LOG_DIR=/var/log/iam-contracts

# 日志级别（debug, info, warn, error）
LOG_LEVEL=info

# 日志格式（json, text）
LOG_FORMAT=json

# ============================================================================
# 安全配置
# ============================================================================

# 是否启用 HTTPS（通过 Nginx 反向代理）
HTTPS_ENABLED=true

# SSL 证书路径（如果使用）
# SSL_CERT_PATH=/etc/ssl/certs/iam-apiserver.crt

# SSL 密钥路径（如果使用）
# SSL_KEY_PATH=/etc/ssl/private/iam-apiserver.key

# ============================================================================
# 监控配置
# ============================================================================

# Prometheus 指标端点
METRICS_ENABLED=true
METRICS_PORT=9090

# ============================================================================
# 注意事项
# ============================================================================
#
# 1. 敏感信息（密码、Token 等）不应直接写在此文件中
#    应使用 Jenkins 的 Credentials 功能管理
#
# 2. 不同环境（开发、测试、生产）应使用不同的配置文件
#
# 3. 此文件不应提交到版本控制系统
#    建议添加到 .gitignore
#
# 4. 在 Jenkinsfile 中使用示例：
#    environment {
#        DEPLOY_HOST = credentials('deploy-host')
#        MYSQL_PASSWORD = credentials('mysql-password')
#    }
#
# ============================================================================
